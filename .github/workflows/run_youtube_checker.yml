name: Check YouTube for New Videos

on:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:

jobs:
  run_script:
    runs-on: ubuntu-latest

    outputs:
      video_id: ${{ steps.run_python.outputs.video_id }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install google-api-python-client

      - name: Run Python Script
        id: run_python
        env:
          API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        run: echo "video_id=$(python script.py)" >> $GITHUB_OUTPUT

  check_for_changes:
    runs-on: ubuntu-latest
    needs: run_script
    if: ${{ needs.run_script.outputs.video_id != '' }}

    steps:
      - name: Check previous video id
        run: |
          PREVIOUS_VIDEO_ID="${{ vars.PREVIOUS_VIDEO_ID }}"
          LATEST_VIDEO_ID="${{ needs.run_script.outputs.video_id }}"

          if [[ "$LATEST_VIDEO_ID" != "$PREVIOUS_VIDEO_ID" ]]; then
            echo "New video detected!"
          else
            echo "No new video detected."
          fi

      - name: Set new variable
        run: |
          echo "PREVIOUS_VIDEO_ID=${{ needs.run_script.outputs.video_id }}" >> $GITHUB_ENV
      - name: Update Variable
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.updateRepoVariable({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'PREVIOUS_VIDEO_ID',
              value: process.env.PREVIOUS_VIDEO_ID
            });
